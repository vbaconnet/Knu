/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

xmin -100;
xmax 400;
ymin -100;
ymax 100;
zmin -16;
zmax 54;

dx 1.5;

Nx #calc "std::floor(($xmax - $xmin) / $dx)";
Ny #calc "std::floor(($ymax - $ymin) / $dx)";
Nz #calc "std::floor(($zmax - $zmin) / $dx)";


vertices
(
    ($xmin $ymin $zmin)
    ($xmax $ymin $zmin)
    ($xmax $ymax $zmin)
    ($xmin $ymax $zmin)

    ($xmin $ymin $zmax)
    ($xmax $ymin $zmax)
    ($xmax $ymax $zmax)
    ($xmin $ymax $zmax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($Nx $Ny $Nz) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    // Dummy patch to trigger overset interpolation before any other bcs
    oversetPatch
    {
        type overset;
        faces ();
    }

    inlet
    {
	type patch;
	faces 
	(
            (0 4 7 3)
	);
    }

    wall1
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }

    wall2
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }

    wall3
    {
        type wall;
        faces
        (
	    (2 6 5 1)
        );
    }

    bottom
    {
	type wall;
	faces 
	(
	    (0 3 2 1)
	);
    }

    atmosphere
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
